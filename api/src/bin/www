#!/usr/bin/env node

/**
 * Module dependencies.
 */
const http = require('http');
const app = require('../app.js');
const { connectToDatabase } = require('../models/mongodb/db.js');

/**
 * Create HTTP server.
 */
const server = http.createServer(app);

// Intentar conectar a la BD antes de iniciar el servidor
connectToDatabase()
  .then(() => {
    /**
     * Listen on provided port, on all network interfaces.
     */
    server.listen(app.get('port'));
    server.on('error', onError);
    server.on('listening', onListening);
  })
  .catch((err) => {
    log.error('Could not start server due to DB connection error');
    console.error(err);
    process.exit(1);
  });

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const port = app.get('port');
  
  let bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  log.info('Server listening on ' + bind);
}
